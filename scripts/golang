#!/usr/bin/env zsh

set -eu

CURRDIR=$(cd "$(dirname $0)" && pwd -P)
source "${CURRDIR}/utils.sh"

PLATFORM=
if [[ "$(uname -s)" =~ Darwin ]]; then
  PLATFORM='darwin'
elif [[ "$(uname -s)" =~ Linux ]]; then
  PLATFORM='linux'
fi

# The Golang project does not use github releases properly (2017-10-28).
# The most reliable way is currently to parse the official Golang downloads page.
GO_VERSION=$(
  curl -gsL golang.org/dl \
    | grep -m1 "${PLATFORM}-amd64.tar.gz" \
    | sed -E "s|.*\"/dl/go(.+)\.${PLATFORM}-amd64.tar.gz\".+|\1|"
)

CURRDIR=$(cd "$(dirname $0)" && pwd -P)
GO_WORKSPACE="${HOME}/go"
DOWNLOAD_DIR="${HOME}/Downloads"
FILENAME="go${GO_VERSION}.${PLATFORM}-amd64.tar.gz"
URL="https://storage.googleapis.com/golang/${FILENAME}"

echo "PLATFORM    ${PLATFORM}"
echo "GO_VERSION  ${GO_VERSION}"
echo "FILENAME    ${FILENAME}"
echo "URL         ${URL}"

source "${CURRDIR}/utils.sh"

echo "Ensure go projects dirs: ${GO_WORKSPACE} and ${GO_WORKSPACE}/src"
mkdir -p "${GO_WORKSPACE}/src"

echo "Remove old installation (dir /usr/local/go)"
sudo /bin/rm -rf "/usr/local/go"

echo "Downloading ${URL}"
wget -N -P "${DOWNLOAD_DIR}" "${URL}"

echo "Extract ${DOWNLOAD_DIR}/${FILENAME} -> /usr/local"
sudo tar -C /usr/local -xzf "${DOWNLOAD_DIR}/${FILENAME}"

echo "Checking installation: $(go version) installed at $(command -v go)"

"${CURRDIR}/golang-zsh-completion"
