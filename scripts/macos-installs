#!/usr/bin/env bash

set -eu
set -o pipefail

if [[ -z "$(xcode-select -p 2>/dev/null)" ]]; then
  echo "Missing Command Line Tools. Install with 'xcode-select --install'."
fi

CURRDIR="$(cd "$(dirname "$([ -L "${0}" ] && readlink "${0}" || echo "${0}")")" && pwd -P)"
source "${CURRDIR}/utils.sh"

# native uname only supports -m, not the long format --machine
BREW_PREFIX=
if [[ "$(uname -m)" == "x86_64" ]]; then
  BREW_PREFIX='/usr/local'
elif [[ "$(uname -m)" == "arm64" ]]; then
  BREW_PREFIX='/opt/homebrew'
else
  echo "Unsupported architecture: $(uname -m)"
  exit 1
fi

echo "[setup] Install Homebrew if not already present"
if [[ ! -x "${BREW_PREFIX}/bin/brew" ]]; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

export PATH="$BREW_PREFIX/bin:$PATH"

# ---------------- #
# --- Formulae --- #
# ---------------- #

# NOTE: docker is installed as cask (desktop app), because even if a docker
# formulae exists, that requires VirtualBox.

# echo "[setup] Install Node.js"
# formula node
# formula yarn

# formula tidy-html5

# GNU utilities
brew install --formula -q \
  coreutils \
  cmake \
  diffutils \
  findutils \
  gawk \
  gnu-getopt \
  gnu-indent \
  gnu-sed \
  gnu-tar \
  gnu-time \
  gnu-which \
  gpatch \
  grep \
  gzip \
  inetutils

# modern versions of macOS built-ins
brew install --formula -q \
  bash \
  curl \
  git \
  less \
  libxml2 \
  make \
  nano \
  openssh \
  rsync \
  sqlite \
  zsh

# extra utilities
brew install --formula -q \
  bat \
  cloc \
  direnv \
  diskus \
  dua-cli \
  exa \
  fd \
  fswatch \
  fzf \
  git-delta \
  gnupg \
  htop \
  imagemagick \
  jo \
  jq \
  lsof \
  mosh \
  mtr \
  nmap \
  nnn \
  parallel \
  pbzip2 \
  pigz \
  pipx \
  procs \
  ripgrep \
  smartmontools \
  tig \
  tmux \
  tree \
  universal-ctags \
  vim \
  watch \
  watson \
  wdiff \
  wget \
  yq \
  zoxide

# --------------------------------- #
# --- Post install for formulae --- #
# --------------------------------- #

echo "[setup] FZF post-install setup"
$BREW_PREFIX/opt/fzf/install --key-bindings --completion --no-update-rc

if [[ ! $SHELL == "$BREW_PREFIX/bin/zsh" ]]; then
  echo "[setup] Brew-installed shells post-install setup"
  append_if_missing /etc/shells "$BREW_PREFIX/bin/bash"
  append_if_missing /etc/shells "$BREW_PREFIX/bin/zsh"

  chsh -s $BREW_PREFIX/bin/zsh
fi

# Ensure git is available for the subsequent scripts.
export PATH="$BREW_PREFIX/bin:$PATH"

echo "[setup] Install dotfiles"
"${CURRDIR}/dotfiles"

# ------------- #
# --- Casks --- #
# ------------- #

echo "[setup] Install Apps and Fonts as Casks"
brew tap homebrew/cask-fonts

brew install --cask -q \
  font-jetbrains-mono \
  font-juliamono \
  iterm2 \
  middle \
  monitorcontrol \
  pastebot \
  rectangle \
  visual-studio-code

echo "[setup] Ensure local ~/Applications is available only to this user"
mkdir -p ~/Applications
chmod 0700 ~/Applications

# ------------------------------ #
# --- Post install for casks --- #
# ------------------------------ #

# --- Middle ---

# Middle.app <https://middleclick.app/> only allows to choose one option (click
# or tap) for each device.
#
# By writing the options directly it's possible to have both click and tap
# working for the same device (trick shared by author of the app.)
defaults write com.knollsoft.Middle trackpadThreeClick -bool true
defaults write com.knollsoft.Middle trackpadThreeTap -bool true

# --- PasteBot ---

# hide both PasteBot's menu icon and the dock icon
# https://tapbots.com/pastebot/help/09_troubleshooting/ > Hidden options
defaults write com.tapbots.Pastebot2Mac UIVisibilityState 10

# ------------------------------- #
# --- Other non-brew installs --- #
# ------------------------------- #

# echo "[setup] Install pipx packages"

pipx ensurepath

pipx install yapf
pipx install pylint
pipx install flake8
pipx install mypy
# pipx install litecli

# ---------------------------------------------------- #
# --- Fix source code files appearing in Spotlight --- #
# ---------------------------------------------------- #

# See https://www.howtogeek.com/231829/how-to-disable-developer-search-results-in-spotlight-on-a-mac/

echo "[setup] Fix Spotlight bug not showing the 'Developer' option."
echo "        Remember to disable 'Developer' in Spotlight."
touch /Applications/Xcode.app

# -------------------------------- #
# --- Save screenshots as JPEG --- #
# -------------------------------- #

defaults write com.apple.screencapture type jpg
