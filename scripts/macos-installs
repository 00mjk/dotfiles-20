#!/usr/bin/env bash

set -eu
set -o pipefail

if [[ -z "$(xcode-select -p 2>/dev/null)" ]]; then
  echo "Missing Command Line Tools. Install with 'xcode-select --install'."
fi

CURRDIR="$(cd "$(dirname "$([ -L "${0}" ] && readlink "${0}" || echo "${0}")")" && pwd -P)"
source "${CURRDIR}/utils.sh"

# native uname only supports -m, not the long format --machine
BREW_PREFIX=
if [[ "$(uname -m)" == "x86_64" ]]; then
  BREW_PREFIX='/usr/local'
elif [[ "$(uname -m)" == "arm64" ]]; then
  BREW_PREFIX='/opt/homebrew'
else
  echo "Unsupported architecture: $(uname -m)"
  exit 1
fi

echo "[setup] Install Homebrew if not already present"
if [[ ! -x "${BREW_PREFIX}/bin/brew" ]]; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

export PATH="$BREW_PREFIX/bin:$PATH"

function formula() { brew install --formula $1; }
function cask()    { brew install --cask    $1; }

# ---------------- #
# --- Formulae --- #
# ---------------- #

# NOTE: docker is installed as cask (desktop app), because even if a docker
# formulae exists, that requires VirtualBox.

echo "[setup] Install GNU utilities"
formula coreutils
formula cmake
formula diffutils
formula findutils
formula gawk
formula gnu-getopt
formula gnu-indent
formula gnu-sed
formula gnu-tar
formula gnu-time
formula gnu-which
formula gpatch
formula grep
formula gzip
formula inetutils

echo "[setup] Install recent versions of macOS built-in utilities"
formula bash
formula curl
formula git
formula tidy-html5
formula less
formula libxml2
formula make
formula nano
formula openssh
formula rsync
formula sqlite
formula ssh

echo "[setup] Install extra utilities"
formula bat
formula cloc
formula direnv
formula exa
formula fd
formula fzf
formula git-delta
formula gnupg
formula htop
formula jo
formula jq
formula lsof
formula mosh
formula mtr
formula nmap
formula nnn
formula parallel
formula pbzip2
formula pigz
formula pipx
formula procs
formula ripgrep
formula smartmontools
formula tig
formula tmux
formula tree
formula universal-ctags
formula vim
formula watch
formula watson
formula wdiff
formula wget
formula zoxide

echo "[setup] Install Node.js"
formula node
formula yarn

# --------------------------------- #
# --- Post install for formulae --- #
# --------------------------------- #

echo "[setup] FZF post-install setup"
$BREW_PREFIX/opt/fzf/install --key-bindings --completion --no-update-rc

if [[ ! $SHELL == "$BREW_PREFIX/bin/zsh" ]]; then
  echo "[setup] Brew-installed shells post-install setup"
  append_if_missing /etc/shells "$BREW_PREFIX/bin/bash"
  append_if_missing /etc/shells "$BREW_PREFIX/bin/zsh"

  chsh -s $BREW_PREFIX/bin/zsh
fi

# Ensure git is available for the subsequent scripts.
export PATH="$BREW_PREFIX/bin:$PATH"

echo "[setup] Install dotfiles"
"${CURRDIR}/dotfiles"

echo "[setup] Install Oh My Zsh"
"$CURRDIR/ohmyzsh"

# ------------- #
# --- Casks --- #
# ------------- #

echo "[setup] Install Apps and Fonts as Casks"
brew tap homebrew/cask-fonts

cask firefox
cask font-jetbrains-mono
cask font-juliamono
cask google-chrome
cask iterm2
cask middle
cask monitorcontrol # external display brightness
cask pastebot
cask rectangle
cask visual-studio-code
cask zoom

echo "[setup] Ensure local ~/Applications is available only to this user"
mkdir -p ~/Applications
chmod 0700 ~/Applications

# ------------------------------ #
# --- Post install for casks --- #
# ------------------------------ #

# --- Middle ---

# Middle.app <https://middleclick.app/> only allows to choose one option (click
# or tap) for each device.
#
# By writing the options directly it's possible to have both click and tap
# working for the same device (trick shared by author of the app.)
defaults write com.knollsoft.Middle trackpadThreeClick -bool true
defaults write com.knollsoft.Middle trackpadThreeTap -bool true

# --- PasteBot ---

# hide both PasteBot's menu icon and the dock icon
# https://tapbots.com/pastebot/help/09_troubleshooting/ > Hidden options
defaults write com.tapbots.Pastebot2Mac UIVisibilityState 10

# ------------------------------- #
# --- Other non-brew installs --- #
# ------------------------------- #

# echo "[setup] Install pipx packages"

pipx ensurepath

pipx install yapf
pipx install pylint
pipx install flake8
pipx install mypy
pipx install litecli

# ---------------------------------------------------- #
# --- Fix source code files appearing in Spotlight --- #
# ---------------------------------------------------- #

# See https://www.howtogeek.com/231829/how-to-disable-developer-search-results-in-spotlight-on-a-mac/

echo "[setup] Fix Spotlight bug not showing the 'Developer' option."
echo "        Remember to disable 'Developer' in Spotlight."
touch /Applications/Xcode.app
