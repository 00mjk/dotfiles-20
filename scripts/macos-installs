#!/usr/bin/env bash

set -eu
set -o pipefail

if [[ -z "$(xcode-select -p 2>/dev/null)" ]]; then
  echo "Missing Command Line Tools. Install with 'xcode-select --install'."
fi

CURRDIR="$(cd "$(dirname "$([ -L "${0}" ] && readlink "${0}" || echo "${0}")")" && pwd -P)"
source "${CURRDIR}/utils.sh"

# native uname only supports -m, not the long format --machine
BREW_PREFIX=
if [[ "$(uname -m)" == "x86_64" ]]; then
  BREW_PREFIX='/usr/local'
elif [[ "$(uname -m)" == "arm64" ]]; then
  BREW_PREFIX='/opt/homebrew'
else
  echo "Unsupported architecture: $(uname -m)"
  exit 1
fi

echo "[setup] Install Homebrew if not already present"
if [[ ! -x "${BREW_PREFIX}/bin/brew" ]]; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

export PATH="$BREW_PREFIX/bin:$PATH"

# ---------------- #
# --- Formulae --- #
# ---------------- #

# NOTE: docker is installed as cask (desktop app), because even if a docker
# formulae exists, that requires VirtualBox.

echo "[setup] Install GNU utilities"
brew install coreutils
brew install diffutils
brew install findutils
brew install gawk
brew install gnu-getopt
brew install gnu-indent
brew install gnu-sed
brew install gnu-tar
brew install gnu-time
brew install gnu-which
brew install gpatch
brew install grep
brew install gzip
brew install inetutils

echo "[setup] Install recent versions of macOS built-in utilities"
brew install bash
brew install curl
brew install git
brew install tidy-html5
brew install less
brew install libxml2
brew install make
brew install nano
brew install openssh
brew install rsync
brew install sqlite
brew install zsh

echo "[setup] Install extra utilities"
brew install bat
brew install cloc
brew install direnv
brew install exa
brew install fd
brew install fzf
brew install git-delta
brew install gnupg
brew install htop
brew install jq
brew install lsof
brew install mosh
brew install mtr
brew install nmap
brew install nnn
brew install parallel
brew install pbzip2
brew install pigz
brew install pipx
brew install procs
brew install ripgrep
brew install smartmontools
brew install tig
brew install tmux
brew install tree
brew install universal-ctags
brew install vim
brew install watch
brew install watson
brew install wdiff
brew install wget
brew install zoxide

echo "[setup] Install Node.js"
brew install node
brew install yarn

# --------------------------------- #
# --- Post install for formulae --- #
# --------------------------------- #

echo "[setup] FZF post-install setup"
$BREW_PREFIX/opt/fzf/install --key-bindings --completion --no-update-rc

if [[ ! $SHELL == "$BREW_PREFIX/bin/zsh" ]]; then
  echo "[setup] Brew-installed shells post-install setup"
  append_if_missing /etc/shells "$BREW_PREFIX/bin/bash"
  append_if_missing /etc/shells "$BREW_PREFIX/bin/zsh"

  chsh -s $BREW_PREFIX/bin/zsh
fi

# Ensure git is available for the subsequent scripts.
export PATH="$BREW_PREFIX/bin:$PATH"

echo "[setup] Install dotfiles"
"${CURRDIR}/dotfiles"

echo "[setup] Install Oh My Zsh"
"$CURRDIR/ohmyzsh"

# ------------- #
# --- Casks --- #
# ------------- #

echo "[setup] Install Apps and Fonts as Casks"
brew tap homebrew/cask-fonts

brew install --cask firefox
brew install --cask font-jetbrains-mono
brew install --cask font-juliamono
brew install --cask google-chrome
brew install --cask iterm2
brew install --cask middle
brew install --cask pastebot
brew install --cask rectangle
brew install --cask visual-studio-code
brew install --cask zoom

echo "[setup] Ensure local ~/Applications is available only to this user"
mkdir -p ~/Applications
chmod 0700 ~/Applications

# ------------------------------ #
# --- Post install for casks --- #
# ------------------------------ #

# --- Middle ---

# Middle.app <https://middleclick.app/> only allows to choose one option (click
# or tap) for each device.
#
# By writing the options directly it's possible to have both click and tap
# working for the same device (trick shared by author of the app.)
defaults write com.knollsoft.Middle trackpadThreeClick -bool true
defaults write com.knollsoft.Middle trackpadThreeTap -bool true

# --- PasteBot ---

# hide both PasteBot's menu icon and the dock icon
# https://tapbots.com/pastebot/help/09_troubleshooting/ > Hidden options
defaults write com.tapbots.Pastebot2Mac UIVisibilityState 10

# ------------------------------- #
# --- Other non-brew installs --- #
# ------------------------------- #

# echo "[setup] Install pipx packages"

pipx ensurepath

pipx install yapf
pipx install pylint
pipx install flake8
pipx install mypy
pipx install litecli

# ---------------------------------------------------- #
# --- Fix source code files appearing in Spotlight --- #
# ---------------------------------------------------- #

# See https://www.howtogeek.com/231829/how-to-disable-developer-search-results-in-spotlight-on-a-mac/

echo "[setup] Fix Spotlight bug not showing the 'Developer' option."
echo "        Remember to disable 'Developer' in Spotlight."
touch /Applications/Xcode.app
