#!/usr/bin/env zsh

set -eu
set -o pipefail

if [[ ! "$(uname -s)" =~ Darwin ]]; then
  echo "Only needed on macOS, all done"
  exit 0
fi

set +e
echo "[setup] Install Command Line Tools for Xcode if not already present"
xcode-select --install 2>&1
set -e

echo "[setup] Install Homebrew if not already present"
if [[ -z $(command -v brew) ]]; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

CURRDIR=$(cd "$(dirname $0)" && pwd -P)
source "${CURRDIR}/utils.sh"

# ---------------- #
# --- Formulae --- #
# ---------------- #

# NOTE: docker is installed as cask (desktop app), because even if a docker
# formulae exists, that requires VirtualBox.

echo "[setup] Install GNU utilities"
brew install --formulae --quiet \
  coreutils \
  diffutils \
  findutils \
  gawk \
  gnu-getopt \
  gnu-indent \
  gnu-sed \
  gnu-tar \
  gnu-time \
  gnu-which \
  gpatch \
  grep \
  gzip \
  inetutils

echo "[setup] Install recent versions of macOS built-in utilities"
brew install --formulae --quiet \
  bash \
  git \
  tidy-html5 \
  less \
  libxml2 \
  make \
  nano \
  openssh \
  perl \
  python \
  rsync \
  sqlite \
  zsh

echo "[setup] Install extra utilities"
brew install --formulae --quiet \
  bat \
  bmon \
  cloc \
  cmark \
  colordiff \
  direnv \
  fd \
  fff \
  ffmpeg \
  fzf \
  glow \
  gnupg \
  golangci/tap/golangci-lint \
  graphviz \
  htop \
  httpie \
  imagemagick \
  jq \
  kubectx \
  lf \
  libpq \
  lsof \
  mosh \
  mtr \
  nethogs \
  nload \
  nmap \
  nnn \
  parallel \
  pipx \
  plantuml \
  pre-commit \
  pyenv \
  ranger \
  rbenv \
  ripgrep \
  ruby \
  ruby-build \
  ruby-install \
  slurm \
  the_silver_searcher \
  tig \
  tmux \
  trash \
  tree \
  vim \
  watch \
  wdiff \
  wget \
  yq

echo "[setup] Install Node.js"
brew install --formulae --quiet \
  node \
  yarn

# universal-ctags is a head-only formula until considered stable
brew install --formulae --quiet \
  --HEAD \
  universal-ctags/universal-ctags/universal-ctags

# --------------------------------- #
# --- Post install for formulae --- #
# --------------------------------- #

echo "[setup] Python post-install setup"
brew link --overwrite --force python@3.9

python3 -m pip install ydiff

echo "[setup] FZF post-install setup"
/usr/local/opt/fzf/install --key-bindings --completion --no-update-rc

echo "[setup] Brew-installed shells post-install setup"
append_if_missing /etc/shells "/usr/local/bin/bash"
append_if_missing /etc/shells "/usr/local/bin/zsh"

chsh -s /usr/local/bin/zsh

echo "[setup] Install dotfiles"
"${CURRDIR}/dotfiles"

echo "[setup] Install Vim configuration"
"${CURRDIR}/vim"

echo "[setup] Install Oh My Zsh"
"$CURRDIR/ohmyzsh"

# ------------- #
# --- Casks --- #
# ------------- #

echo "[setup] Install Apps and Fonts as Casks"
brew tap homebrew/cask-fonts

brew install --casks --quiet \
  alacritty \
  calibre \
  discord \
  docker \
  drawio \
  dropbox \
  firefox \
  font-go \
  font-inconsolata \
  font-jetbrains-mono \
  font-juliamono \
  google-backup-and-sync \
  google-chrome \
  iterm2 \
  libreoffice \
  microsoft-teams \
  microsoft-edge \
  middle \
  pastebot \
  rectangle \
  sdformatter \
  slack \
  stats \
  visual-studio-code \
  vlc \
  whatsapp \
  zoom

# ------------------------------ #
# --- Post install for casks --- #
# ------------------------------ #

echo "[setup] Configure extra autocompletions"
ZSH_SITE_FUNCTIONS=/usr/local/share/zsh/site-functions

if [[ -d "${ZSH_SITE_FUNCTIONS}" ]]; then
  pushd "${ZSH_SITE_FUNCTIONS}"
  docker_completions_dir=/Applications/Docker.app/Contents/Resources/etc/
  ln -sfv "$docker_completions_dir/docker.zsh-completion" _docker
  ln -sfv "$docker_completions_dir/docker-compose.zsh-completion" _docker-compose
  kubectl completion zsh > _kubectl
  popd
fi

# TODO: Link Chrome Dictionary to Dropbox
# $HOME/Library/Application\ Support/Google/Chrome/Default/Custom\ Dictionary.txt

# ------------------------------- #
# --- Other non-brew installs --- #
# ------------------------------- #

echo "[setup] Install Golang"
"${CURRDIR}/golang"

echo "[setup] Install Rust"
"${CURRDIR}/rust"

# ---------------------------------------------------- #
# --- Fix source code files appearing in Spotlight --- #
# ---------------------------------------------------- #

# See https://www.howtogeek.com/231829/how-to-disable-developer-search-results-in-spotlight-on-a-mac/

echo "[setup] Fix Spotlight bug not showing the 'Developer' option"
touch /Applications/Xcode.app

# ------------------ #
# --- Next steps --- #
# ------------------ #

echo "

-------------
--- NOTES ---
-------------

* Many packages installed depend on the shell configuration provided.
  Run './scripts/dotfiles' to install it.

* Other common GNU utilities are

  - autoconf
  - binutils
  - ed
  - emacs
  - flex
  - gdb
  - gnu-units
  - m4
  - screen
  - util-linux

* Other casks:

  - dash
  - devdocs
  - google-drive-file-stream (for G Suite accounts, supports Shared Drives)
  - menubar-stats
  - mdrp
  - devdocs
  - istat-menus
  - homebrew/cask-drivers/logitech-camera-settings
  - onedrive
  - signal
  - slack
  - telegram
  - thunderbird
  - tunnelbear
  - vagrant
  - virtualbox
  - virtualbox-extension-pack

* Open Spotlight preferences to disable 'Developer' results (source code files)

"
