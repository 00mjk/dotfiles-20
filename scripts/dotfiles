#!/usr/bin/env bash

set -e

if [[ -z $(command -v git) ]]; then
  echo "Please install git first"
  exit 1
fi

ROOTDIR=$(git rev-parse --show-toplevel)
CURRDIR=$(cd "$(dirname $BASH_SOURCE)" && pwd -P)
DOTFILES_DIR="${ROOTDIR}/dotfiles"

source "${CURRDIR}/utils.sh"

# ----------- #
# --- git --- #
# ----------- #

backup_and_symlink "${DOTFILES_DIR}/gitconfig_addons_bravoecho" "${HOME}/.gitconfig_addons_bravoecho"

git config --global include.path .gitconfig_addons_bravoecho

# ------------ #
# --- tmux --- #
# ------------ #

backup_and_symlink "${DOTFILES_DIR}/tmux.conf" "${HOME}/.tmux.conf"

# ------------------- #
# --- miscellanea --- #
# ------------------- #

global_config_path=
if [[ -n "${XDG_CONFIG_HOME}" ]]; then
  global_config_path="${XDG_CONFIG_HOME}"
else
  global_config_path="${HOME}/.config"
fi

# --- global fd ignore --- #

backup_and_symlink "${DOTFILES_DIR}/fdignore" "${global_config_path}/fd/ignore"

# --- global ripgrep config --- #

backup_and_symlink "${DOTFILES_DIR}/ripgreprc" "${HOME}/.ripgreprc"

# --- htop --- #

backup_and_symlink "${DOTFILES_DIR}/htoprc" "${global_config_path}/htop/htoprc"

# -------------- #
# --- shells --- #
# -------------- #

backup_and_symlink "${DOTFILES_DIR}/bashrc_addons_bravoecho" "${HOME}/.bashrc_addons_bravoecho"
backup_and_symlink "${DOTFILES_DIR}/zshrc_addons_bravoecho" "${HOME}/.zshrc_addons_bravoecho"
backup_and_symlink "${DOTFILES_DIR}/shell_addons_bravoecho" "${HOME}/.shell_addons_bravoecho"

if [[ "$(uname -s)" =~ Darwin ]]; then
  # prevent the "last login" message on macOS
  touch ~/.hushlogin
  backup_and_symlink "${DOTFILES_DIR}/shell_addons_mac_bravoecho" "${HOME}/.shell_addons_mac_bravoecho"
fi

function enable_shell_addon() {
  local rcfile=$1
  local addon_file=$2

  [[ -f "${HOME}/.${rcfile}" ]] || touch "${HOME}/.${rcfile}"
  append_if_missing "$HOME/.${rcfile}" "[[ -e \"\${HOME}/.${addon_file}\" ]] && source ~/.${addon_file}"
}

# configuration compatible with both zsh and bash
function configure_shell_addons() {
  local rcfile=$1

  # it's important that the addons for the specific shell are loaded first, or
  # some tools won't be configured correctly (like fzf for example)
  enable_shell_addon "${rcfile}" "${rcfile}_addons_bravoecho"
  enable_shell_addon "${rcfile}" "shell_addons_bravoecho"

  if [[ "$(uname -s)" == "Darwin" ]]; then
    enable_shell_addon "${rcfile}" "shell_addons_mac_bravoecho"
  fi

  # Allow to further customise without the need to make changes to the provided setup.
  enable_shell_addon "${rcfile}" "shell_addons_local"
}

configure_shell_addons "bashrc"
configure_shell_addons "zshrc"
