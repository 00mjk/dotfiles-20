#!/usr/bin/env bash

set -e

if [[ -z $(command -v git) ]]; then
  echo "Please install git first"
  exit 1
fi

ROOTDIR=$(git rev-parse --show-toplevel)
CURRDIR=$(cd "$(dirname $BASH_SOURCE)" && pwd -P)

source "${CURRDIR}/utils.sh"

# ----------- #
# --- git --- #
# ----------- #

backup_and_symlink $ROOTDIR/gitconfig_addons_bravoecho $HOME/.gitconfig_addons_bravoecho
git config --global include.path .gitconfig_addons_bravoecho

# ------------ #
# --- tmux --- #
# ------------ #

backup_and_symlink $ROOTDIR/tmux.conf $HOME/.tmux.conf

# -------------- #
# --- shells --- #
# -------------- #

backup_and_symlink $ROOTDIR/bashrc_addons_bravoecho $HOME/.bashrc_addons_bravoecho
backup_and_symlink $ROOTDIR/zshrc_addons_bravoecho $HOME/.zshrc_addons_bravoecho

backup_and_symlink $ROOTDIR/shell_addons_bravoecho $HOME/.shell_addons_bravoecho
backup_and_symlink $ROOTDIR/shell_addons_mac_bravoecho $HOME/.shell_addons_mac_bravoecho

function enable_shell_addon() {
  local rcfile=$1
  local addon_file=$2

  if [[ -f "${HOME}/.${rcfile}" ]]; then
    append_if_missing "$HOME/.${rcfile}" "[[ -e \"\${HOME}/.${addon_file}\" ]] && source ~/.${addon_file}"
  fi
}

enable_shell_addon zshrc "zshrc_addons_bravoecho"

# configuration compatible with both zsh and bash
function configure_shell_addons() {
  local rcfile=$1

  enable_shell_addon "${rcfile}" "shell_addons_bravoecho"

  if [[ "$(uname -s)" == "Darwin" ]]; then
    enable_shell_addon "${rcfile}" "shell_addons_mac_bravoecho"
  fi

  # Allow to further customise without the need to make changes to the provided setup.
  enable_shell_addon "${rcfile}" "shell_addons_local"
}

configure_shell_addons bashrc
configure_shell_addons zshrc
