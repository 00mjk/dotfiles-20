#!/usr/bin/env zsh

set -e

if [[ -z $(command -v git) ]]; then
  echo "Please install git first"
  exit 1
fi

CURRDIR="$(cd "$(dirname "$([ -L "${0}" ] && readlink "${0}" || echo "${0}")")" && pwd -P)"
ROOTDIR=$(git rev-parse --show-toplevel)
DOTFILES_DIR="${ROOTDIR}/dotfiles"
SCRIPTS_DIR="${ROOTDIR}/scripts"

source "${CURRDIR}/utils.sh"

HOMEBREW_PREFIX=$(usr_local)

export PATH="$HOMEBREW_PREFIX/bin:$PATH"

# ----------- #
# --- git --- #
# ----------- #

backup_and_symlink "${DOTFILES_DIR}/gitconfig_addons" "${HOME}/.gitconfig_addons"
backup_and_symlink "${DOTFILES_DIR}/gitignore_global" "${HOME}/.gitignore_global"

git config --global include.path .gitconfig_addons
# for some reason the global excludesfile requires an absolute path, so we do
# not place it in the addons, but, with this command, directly in the main
# local .gitconfig
git config --global core.excludesfile ~/.gitignore_global

# ------------ #
# --- tmux --- #
# ------------ #

backup_and_symlink "${DOTFILES_DIR}/tmux.conf" "${HOME}/.tmux.conf"

# Compile tmux specific terminfo profiles with "tic" to support italics inside
# tmux.
#
# Some system might already have them, but in April 2021 most still don't
# provide them.
#
# The profiles will be compiled to ~/.terminfo.
#
tic "${ROOTDIR}/dotfiles/tmux.terminfo"
tic "${ROOTDIR}/dotfiles/tmux-256color.terminfo"

# ------------------- #
# --- miscellanea --- #
# ------------------- #

global_config_path=
if [[ -n "${XDG_CONFIG_HOME}" ]]; then
  global_config_path="${XDG_CONFIG_HOME}"
else
  global_config_path="${HOME}/.config"
fi

# --- global fd ignore --- #

backup_and_symlink "${DOTFILES_DIR}/ignore" "${global_config_path}/fd/ignore"

# --- global ripgrep config --- #

backup_and_symlink "${DOTFILES_DIR}/ripgreprc" "${HOME}/.ripgreprc"
backup_and_symlink "${DOTFILES_DIR}/ignore" "${HOME}/.rgignore"

# --- htop --- #

backup_and_symlink "${DOTFILES_DIR}/htoprc" "${global_config_path}/htop/htoprc"

# --- sqlite -- #

backup_and_symlink "${DOTFILES_DIR}/sqliterc" "${HOME}/.sqliterc"

# --- lf (console file manager, ranger clone) --- #

backup_and_symlink "${DOTFILES_DIR}/lfrc" "${global_config_path}/lf/lfrc"

#--- tig ---#

backup_and_symlink "${DOTFILES_DIR}/tigrc" "${HOME}/.tigrc"

# --- local bin --- #

mkdir -p "${HOME}/.local/bin"

# --- install nnn plugins --- #

"${CURRDIR}/nnn-plugins"

# --- bat --- #

backup_and_symlink "${DOTFILES_DIR}/bat_config" "${HOME}/.config/bat/config"

# --- direnv --- #

backup_and_symlink "${DOTFILES_DIR}/direnvrc" "${HOME}/.direnvrc"

# --- delta themes --- #

"${CURRDIR}/delta-themes"

# --- gotop --- #

# this requires the gotop command to be aliases, because it does not respect
# the XDG_CONFIG_HOME convention, and it will not automatically load the
# configuration from this custom location

backup_and_symlink "${DOTFILES_DIR}/gotop.conf" "${HOME}/.config/gotop/gotop.conf"
backup_and_symlink "${DOTFILES_DIR}/gotop.procs.layout" "${HOME}/.config/gotop/layouts/procs"

# --- custom free script --- #

backup_and_symlink "${SCRIPTS_DIR}/free" "${HOME}/.local/bin/free"

# --- macos upgrade everything --- #

backup_and_symlink "${SCRIPTS_DIR}/brut" "${HOME}/.local/bin/brut"
backup_and_symlink "${SCRIPTS_DIR}/macos-updates" "${HOME}/.local/bin/macos-updates"

# --- other custom scripts --- #

backup_and_symlink "${SCRIPTS_DIR}/epochms" "${HOME}/.local/bin/epochms"
backup_and_symlink "${SCRIPTS_DIR}/utcnow" "${HOME}/.local/bin/utcnow"
backup_and_symlink "${SCRIPTS_DIR}/nauniq" "${HOME}/.local/bin/nauniq"

# -------------- #
# --- shells --- #
# -------------- #

backup_and_symlink "${DOTFILES_DIR}/shell_addons" "${HOME}/.shell_addons"
backup_and_symlink "${DOTFILES_DIR}/bashrc" "${HOME}/.bashrc"
backup_and_symlink "${DOTFILES_DIR}/zshrc" "${HOME}/.zshrc"

if [[ "$(uname -s)" =~ Darwin ]]; then
  # prevent the "last login" message on macOS
  touch ~/.hushlogin
  backup_and_symlink "${DOTFILES_DIR}/shell_addons_mac" "${HOME}/.shell_addons_mac"
fi

# ----------------------- #
# --- zsh completions --- #
# ----------------------- #

"${CURRDIR}/zsh-completions"
