# vim: set ft=tmux: 

# Colours

set-window-option -g status-fg white
set-window-option -g status-bg green
set-window-option -g window-status-fg white
set-window-option -g window-status-bg green
set-window-option -g window-status-current-bg white
set-window-option -g window-status-current-bg blue

# Responsiveness

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1
# if using normal keybindings this will allow to start working sooner when 
# switched to a pane; the default is 500 ms
set -g repeat-time 300

# Window numbering

# number windows from 1
set-option -g base-index 1
# re-number windows when one is closed
set -g renumber-windows on

# Notify of activity

# highlight window when it has new activity
setw -g monitor-activity on

# Intuitive splits (they don't override the defaults)

bind | split-window -h
bind - split-window -v

# Navigating windows

bind-key -n C-Space select-window -t :+ # cycle through windows
bind ^b last-window # togglei to last window like screen

# Output buffer (be able to scroll further back)

set -g history-limit 500000

# Mouse

if-shell '[ "$(tmux -V | cut -c 6-)" = $(echo "$(tmux -V | cut -c 6-)\n2.1" | sort -rV | head -n1) ]' \
  'set -g mouse on' \
  'set -g mode-mouse on; set -g mouse-resize-pane on; set -g mouse-select-pane on; set -g mouse-select-window on'

# Terminal compatibility

# Pass the keys through, especially necessary to make full use of native vim keymappings.
set -g xterm-keys on

# Vim key bindings
set-window-option -g mode-keys vi

if-shell '[ "$(tmux -V | cut -c 6-)" = $(echo "$(tmux -V | cut -c 6-)\n2.4" | sort -rV | head -n1) ]' \
  'bind -T copy-mode-vi v send -X begin-selection; bind -T copy-mode-vi r send -X rectangle-toggle; bind -T copy-mode-vi y send -X copy-selection' \
  'bind -t vi-copy v begin-selection; bind -t vi-copy r rectangle-toggle; bind -t vi-copy y copy-selection'

# in order to use prefix-p to paste, we need to override the "next buffer" binding,
# which we don't use often, see above the window navigation section
unbind p
bind p paste-buffer
# give 'v' to the user that still needs to go to the previous buffer
bind v previous-window
