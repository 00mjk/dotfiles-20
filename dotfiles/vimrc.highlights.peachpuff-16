autocmd! bufwritepost ~/.vimrc.highlights.peachpuff-16 source ~/.vimrc.highlights.peachpuff-16

" --------------------------------------- "
" --- Syntax highlight customisations --- "
" --------------------------------------- "

" Highlight: tweaks
" -----------------

" for some reason the vertsplit highlight needs to be placed after the set
" colorcolumn option
highlight VertSplit     ctermbg=8     ctermfg=8     cterm=none
highlight NonText                     ctermfg=7     cterm=none
highlight ColorColumn   ctermbg=0
highlight WildMenu      ctermbg=11                  ctermfg=0
highlight LineNr        ctermbg=none  ctermfg=7     cterm=none
highlight CursorLineNr  ctermbg=0     ctermfg=15    cterm=none
" remove any highlighting from CursorLine, or it will make YCM's (YouCompleteMe)
" signature help unusable.
highlight CursorLine    cterm=none
highlight SignColumn    ctermbg=none                cterm=none
highlight Search        ctermbg=0     ctermfg=11    cterm=reverse
highlight Todo          ctermbg=none  ctermfg=4     cterm=none,bold,italic
highlight Visual        ctermbg=8     ctermfg=15    cterm=none
highlight Comment                     ctermfg=7     cterm=italic

highlight SpellBad      ctermbg=8     ctermfg=1 cterm=none

highlight SpellCap      ctermbg=0     ctermfg=12    cterm=reverse
highlight SpellRare     ctermbg=0     ctermfg=13    cterm=reverse
highlight SpellLocal    ctermbg=0     ctermfg=14    cterm=reverse
highlight Error         ctermbg=none  ctermfg=9     cterm=underline,bold
highlight Pmenu         ctermbg=8 ctermfg=none

" NOTE: PmenuSel is also used as part of YCM's (YouCompleteMe) signature help.
highlight PmenuSel      ctermbg=0 ctermfg=4 cterm=bold

highlight PmenuSbar     ctermbg=8
highlight PmenuThumb    ctermbg=7
highlight MatchParen    ctermbg=none  ctermfg=6     cterm=reverse
highlight ErrorMsg      ctermbg=0     ctermfg=9
highlight Function                    ctermfg=12     cterm=bold
highlight EndOfBuffer                 ctermfg=0
highlight MatchParen    ctermbg=8     ctermfg=12    cterm=none,bold

" Statement includes Keyword
highlight Statement                   ctermfg=3

" TODO:
" - vim-go: lines where coverage is not applicable: customise instead of
"   linking to Comment, disable the italic

" Highlight: Whitespace
" ---------------------

" ExtraWhitespace is a new, custom highlight group
highlight ExtraWhitespace ctermbg=none ctermfg=1 cterm=reverse,bold
match ExtraWhitespace /\s\+$/

" --- highlight unwanted trailing whitespace --- "
" <https://vim.fandom.com/wiki/Highlight_unwanted_spaces#Highlighting_with_the_match_command>
"
" * only in normal mode
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

" Highlight: YouCompleteMe, YCM
" -----------------------------

highlight YCMInverse cterm=reverse ctermfg=15 ctermbg=none

" Highlight: vim-go
" -----------------

highlight link goFormatSpecifier Identifier
highlight goTypeName cterm=none,bold ctermbg=none ctermfg=14
highlight goTypeConstructor cterm=none ctermbg=none ctermfg=6
" highlight goSameId ctermbg=8
highlight goSameId cterm=underline
highlight goFunctionCall cterm=none ctermbg=none ctermfg=4

" Highlight: Pandoc
" -----------------

" Highlight headers formatted with underlying '-' and '='
highlight pandocSetexHeader cterm=bold ctermfg=6 ctermbg=none
highlight pandocAtxHeader   ctermfg=6 ctermbg=none

" Highlight: A.L.E. (ALE)
" -----------------------

highlight ALEErrorSign    ctermbg=8  ctermfg=9   cterm=none
highlight ALEWarningSign  ctermbg=8  ctermfg=3   cterm=none
highlight ALEInfoSign     ctermbg=8  ctermfg=12  cterm=none

" Highlight: Statusline
" ---------------------

highlight StatusLine   cterm=none ctermfg=15 ctermbg=8
highlight StatusLineNC cterm=none ctermfg=7 ctermbg=8

highlight BE_StatuslineGreen          ctermbg=8   ctermfg=10  cterm=bold
highlight BE_StatuslineGreenCentre    ctermbg=8   ctermfg=2   cterm=bold
highlight BE_StatuslineBlue           ctermbg=8   ctermfg=12  cterm=bold
highlight BE_StatuslineBlueCentre     ctermbg=8   ctermfg=4   cterm=bold
highlight BE_StatuslineMagenta        ctermbg=8   ctermfg=13  cterm=bold
highlight BE_StatuslineMagentaCentre  ctermbg=8   ctermfg=5   cterm=bold
highlight BE_StatuslineCyan           ctermbg=8   ctermfg=14  cterm=bold
highlight BE_StatuslineCyanCentre     ctermbg=8   ctermfg=6   cterm=bold
highlight BE_StatuslineRed            ctermbg=8   ctermfg=9   cterm=bold
highlight BE_StatuslineRedCentre      ctermbg=8   ctermfg=1   cterm=bold
highlight BE_StatuslineGrey           ctermbg=8   ctermfg=7   cterm=bold
highlight BE_StatuslineGreyCentre     ctermbg=8   ctermfg=15  cterm=bold
highlight BE_StatuslineYellow         ctermbg=8   ctermfg=11  cterm=bold
highlight BE_StatuslineYellowCentre   ctermbg=8   ctermfg=3   cterm=bold

" Highlight: Diffs
" ----------------

highlight DiffAdd     ctermbg=8   ctermfg=2   cterm=none
highlight DiffDelete  ctermbg=8   ctermfg=9   cterm=none
highlight DiffChange  ctermbg=8   ctermfg=15  cterm=none
highlight DiffText    ctermbg=8   ctermfg=4   cterm=none

" Highlight: Extra todo-like keywords
" -----------------------------------

" Add keywords to be highlighted as TODOs (https://vi.stackexchange.com/a/19043)
" The synTodo line:
" 1. list all syntax items (execute("syntax list"))
" 2. split it into a list of lines (split(..., '\n'))
" 3. filter it to only contain lines with syntax group name that ends with Todo (filter(..., { i,v -> match(v, '^\w*Todo\>') == 0}))
" 4. remove everything after syntax group name (map(..., {i,v -> substitute(v, ' .*$', '', '')}))
" result -> a list of syntax group names that end with Todo.
function! UpdateTodoKeywords(...)
  let newKeywords = join(a:000, " ")
  let synTodo = map(filter(split(execute("syntax list"), '\n') , { i,v -> match(v, '^\w*Todo\>') == 0}), {i,v -> substitute(v, ' .*$', '', '')})
  for synGrp in synTodo
    execute "syntax keyword " . synGrp . " contained " . newKeywords
  endfor
endfunction

augroup Todo_CustomKeywords
  autocmd!
  autocmd Syntax * call UpdateTodoKeywords("NOTE", "NOTES", "INFO", "REVIEW", "IDEA", "BUG", "TBD")
augroup END
