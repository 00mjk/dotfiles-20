# vim: set ft=zsh:

# optionally, coming from Bash
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_GB.UTF-8

# don't add history entry if it's a duplicate of the previous command (and only
# if it's exactly the previous one, older duplicates don't count)
setopt HIST_IGNORE_DUPS

# when searching the history, don't show any duplicates in the results
setopt HIST_FIND_NO_DUPS

# remove whitespace from any command before adding it to the history
setopt HIST_REDUCE_BLANKS

# always expire history items in the original order (regardless of duplicates)
setopt NO_HIST_EXPIRE_DUPS_FIRST
setopt NO_HIST_IGNORE_ALL_DUPS

# prevents accidentally overwriting an existing file
setopt NO_CLOBBER

# disable messing with redirection (treat redirection like bash)
setopt NO_MULTIOS

export COMPLETION_WAITING_DOTS="true"
export HIST_STAMPS="yyyy-mm-dd"

export HISTSIZE=250000 # 250K lines

# autocomplete hidden files...
setopt GLOB_DOTS
# ...but exclude "." and ".."
zstyle ':completion:*' special-dirs false

# allow to choose matching options when a command has a wildcard, instead of
# completing the command with all the maches
setopt GLOB_COMPLETE

# use the same colors for completion as ls
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# highlight current completion option
zstyle ':completion:*' menu select

# enable autocompletion for aliases defined in shell_addons;
# each alias will use the give command as the underlying target for the
# autocompletion
#
# the "completealiases" option prevents aliases on the command  line  from
# being internally substituted before completion is attempted, so we need to
# disable it
unsetopt COMPLETE_ALIASES

# set up local completions
fpath+=~/.zfunc

# this would normally be done by oh-my-zsh but even if was installed, some apps
# still need it again
autoload -Uz compinit && compinit -i

# only autocomplete targets for make, not files <https://unix.stackexchange.com/a/499322>
zstyle ':completion:*:*:make:*' tag-order 'targets'

compdef ll='ls'
compdef la='ls'

ZSH_SITE_FUNCTIONS="/usr/local/share/zsh/site-functions"

if [[ -n "$(command -v git)" && -r "${ZSH_SITE_FUNCTIONS}/_git" ]]; then
  compdef gti='git'
  compdef g='git'
  compdef ga='git'
  compdef gaa='git'
  compdef gap='git'
  compdef gb='git'
  compdef gba='git'
  compdef gci='git'
  compdef gcim='git'
  compdef gco='git'
  compdef gcl='git'
  compdef gd='git'
  compdef gds='git'
  compdef gf='git'
  compdef gnp='git'
  compdef gp='git'
  compdef gpl='git'
  compdef gpp='git'
  compdef gps='git'
  compdef gs='git'
  compdef gss='git'
  compdef gst='git'
  compdef gsm='git'
  compdef gsd='git'
fi

if [[ -n "$(command -v docker)" && -r "${ZSH_SITE_FUNCTIONS}/_docker" ]]; then
  compdef dk='docker'
fi

if [[ -n "$(command -v docker-compose)" && -r "${ZSH_SITE_FUNCTIONS}/_docker" ]]; then
  compdef dc='docker-compose'
fi

# fix the Alt-C (Option-C) keybinding for FZF cd to directory
if [[ -n "$(command -v fzf)" && "$(uname -s)" == "Darwin" ]]; then
  bindkey "รง" fzf-cd-widget
fi

# disable "history search" with arrow up/down (https://superuser.com/a/1494820)
# has no effect because although the "widget" exists and is documented, it
# doesn't seem to be available in practice
bindkey '^[[A' up-line-or-history
bindkey '^[[B' down-line-or-history

if [[ -n "$(command -v kubectl)" && -r "${ZSH_SITE_FUNCTIONS}/_kubectl" ]]; then
  compdef kc='kubectl'
fi

if [[ -n "$(command -v kubectx)" && -r "${ZSH_SITE_FUNCTIONS}/_kubectx" ]]; then
  compdef kx='kubectx'
fi

# Lightweight prompt in pure zsh syntax that:
#
#   * colorises the info about user and host
#   * displays the current path
#   * displays the current git branch if it's in a repo
#   * puts the cursor into a new line
#
newline=$'\n'
setopt PROMPT_SUBST # evaluate the shell expressions on every prompt
if [[ "$TERM" != "dumb" ]] && [[ "$DISABLE_LS_COLORS" != "true" ]]; then
  function _bravoecho_git_branch() {
    local branch_name=$(git branch --show-current 2>/dev/null)

    if [[ -n "${branch_name}" ]]; then
      # echo " on %{$fg[green]%}${branch_name}%{$reset_color%}"
      echo " on %F{green}${branch_name}%f"
    fi
  }

  PROMPT='[%F{red}%n%f@%F{magenta}%m%f:%F{blue}%~%f$(_bravoecho_git_branch)]${newline}%# '
else
  PROMPT='[%n@%m:%~]${newline}%# '
fi

# ----------- #
# --- FZF --- #
# ----------- #

# fzf widgets should be loaded as last, to ensure they are not overridden by
# native shell functionality
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh

# ----------- #
# --- NVM --- #
# ----------- #

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
