# vim: set ft=bash:

USR_LOCAL=
if [[ "$(uname -s)" == "Linux" || "$(uname -m)" == "x86_64" ]]; then
  USR_LOCAL='/usr/local'
elif [[ "$(uname -m)" == "arm64" ]]; then
  USR_LOCAL='/opt/homebrew'
else
  echo "Unsupported architecture: $(uname -m)"
  exit 1
fi

# PATH="$USR_LOCAL/opt/openssl@1.1/bin:$PATH"

PATH="$(echo $USR_LOCAL/opt/*/libexec/gnubin | tr ' ' :):$PATH"

PATH="$USR_LOCAL/opt/curl/bin:$PATH"
PATH="$USR_LOCAL/opt/gnu-getopt/bin:$PATH"
PATH="$USR_LOCAL/opt/libpq/bin:$PATH"
PATH="$USR_LOCAL/opt/libxml2/bin:$PATH"
PATH="$USR_LOCAL/opt/lsof/bin:$PATH"
PATH="$USR_LOCAL/opt/sqlite/bin:$PATH"
PATH="$USR_LOCAL/sbin:$PATH"
PATH="$USR_LOCAL/opt/python/libexec/bin:$PATH"

MANPATH="$USR_LOCAL/share/man/:$USR_LOCAL/opt/curl/share/man:$MANPATH"

export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$USR_LOCAL/opt/openssl@1.1"

function brut() {
  local ts=$(date -u +"%Y-%m-%dT%H-%M-%SZ")
  local logdir="$HOME/log"
  local logfile="$logdir/brew-upgrade-${ts}.log"

  mkdir -p $logdir
  touch $logfile

  echo "Logging to $logfile"
  _do_brew_upgrade | tee -a $logfile
  echo "Logged to $logfile"
}

function _do_brew_upgrade() {
  echo "--- brew update ------------------------------------------------------"
  brew update -v 2>&1
  echo "--- brew outdated ----------------------------------------------------"
  brew outdated 2>&1
  echo "---- brew upgrade ----------------------------------------------------"
  brew upgrade 2>&1
  echo "--- brew autoremove --------------------------------------------------"
  brew autoremove -v 2>&1
  echo "--- brew cleanup -----------------------------------------------------"
  brew cleanup --dry-run --prune=all -s 2>&1
  brew cleanup -v 2>&1
}

#---------------#
#--- ncurses ---#
#---------------#

# brew setup to override the default, outdated ncurses that comes with macOS

# export PATH="$USR_LOCAL/opt/ncurses/bin:$PATH"
# export LDFLAGS="-L$USR_LOCAL/opt/ncurses/lib"
# export CPPFLAGS="-I$USR_LOCAL/opt/ncurses/include"
# export PKG_CONFIG_PATH="$USR_LOCAL/opt/ncurses/lib/pkgconfig"
